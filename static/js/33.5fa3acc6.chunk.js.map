{"version":3,"file":"static/js/33.5fa3acc6.chunk.js","mappings":"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","sources":["api1/1apiService.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '07c817eca0f88df46ceed4174b3720d7';\n\nexport async function searchTrendingMovies() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMoviesDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    console.log();\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function searchMoviesCast(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMoviesReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const GoBackButton = styled.button`\n  cursor: pointer;\n  background-color: #38539f;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 20px;\n  margin-bottom: 15px;\n  margin-left: 30px;\n\n  &:hover,\n  &:focus {\n    background-color: #a39cf4;\n  }\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 360px;\n  margin-left: 30px;\n  margin-right: 40px;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n`;\nexport const FilmTitle = styled.h2`\n  font-weight: 600;\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const OverviewTitle = styled.h3`\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\nexport const GenresTitle = styled.h4`\n  font-weight: 600;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;\nexport const Description = styled.p`\n  font-weight: 400;\n  margin-bottom: 10px;\n`;\n","import { searchMoviesDetails } from '../../api1/1apiService';\nimport {\n  Link,\n  useParams,\n  useLocation,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport poster from '../../img/no_poster.jpg';\nimport {\n  Description,\n  FilmTitle,\n  GenresTitle,\n  GoBackButton,\n  Img,\n  OverviewTitle,\n  Wrapper,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    searchMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n  } = movie;\n\n  let date = new Date(release_date);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <GoBackButton>ðŸ‘ˆ Go back</GoBackButton>\n      </Link>\n\n      <Wrapper>\n        <Img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : { poster }\n          }\n          alt={title}\n          width=\"300\"\n        />\n        <div>\n          <FilmTitle>\n            {original_title}({date.getFullYear()})\n          </FilmTitle>\n          <ul>\n            <li>\n              <Description>User Score:{vote_average.toFixed(1)}</Description>\n            </li>\n            <li>\n              <OverviewTitle>Overview</OverviewTitle>\n              <Description>{overview}</Description>\n            </li>\n            <li>\n              <GenresTitle>Genres</GenresTitle>\n              <Description>\n                {genres.map(genre => genre.name).join(' ')}\n              </Description>\n            </li>\n          </ul>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <NavLink to=\"cast\" state={location.state?.from ?? '/'}>\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\" state={location.state?.from ?? '/'}>\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </Wrapper>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","searchTrendingMovies","response","data","results","console","log","searchMovies","query","searchMoviesDetails","movieId","searchMoviesCast","cast","searchMoviesReviews","GoBackButton","styled","Img","Wrapper","FilmTitle","OverviewTitle","GenresTitle","Description","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","poster_path","title","original_title","vote_average","release_date","overview","genres","date","Date","to","state","from","src","poster","alt","width","getFullYear","toFixed","map","genre","name","join","Suspense"],"sourceRoot":""}