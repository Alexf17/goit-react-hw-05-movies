{"version":3,"file":"static/js/304.cef281c0.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,EAAAA,GAAAA,IAAA,sCAAyCC,IAF7D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBT,EAAAA,GAAAA,IAAA,+BACGC,EADH,iCAC+BQ,EAD/B,gCAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,gGAEoBX,EAAAA,GAAAA,IAAA,iBACXW,EADW,oBACQV,EADR,oBAFpB,cAEGE,EAFH,OAKHG,QAAQC,MALL,kBAMIJ,EAASC,MANb,gCAQHE,QAAQC,IAAR,MARG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,gGAEoBX,EAAAA,GAAAA,IAAA,iBACXW,EADW,4BACgBV,EADhB,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKS,MALlB,gCAOHP,QAAQC,IAAR,MAPG,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAmCH,GAAnC,gGAEoBX,EAAAA,GAAAA,IAAA,gBACZW,EADY,4BACeV,EADf,2BAFpB,cAEGE,EAFH,yBAMIA,EAASC,KAAKC,SANlB,gCAQHC,QAAQC,IAAR,MARG,gF,gJC7CMQ,EAAQC,EAAAA,GAAAA,GAAH,gHAOLC,EAAKD,EAAAA,GAAAA,GAAH,iLASFE,EAAKF,EAAAA,GAAAA,GAAH,qEAKFG,EAAMH,EAAAA,GAAAA,IAAH,0DAKHI,EAAYJ,EAAAA,GAAAA,EAAH,iJ,iBCgBtB,EAtCa,WACX,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAmC,MAAtBF,EAASG,SAAmB,UAAY,GAM3D,OAJAC,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,MAAuB2B,KAAKN,EAC7B,GAAE,KAGD,iCACE,SAACR,EAAD,8BAEA,SAACE,EAAD,UACGK,EAAaQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OAChB,SAACf,EAAD,WACE,UAAC,KAAD,CACEa,GAAIA,EACJG,MAAO,CAAEC,KAAMX,GACfY,GAAE,UAAKV,GAAL,OAAkBK,GAHtB,WAKE,SAACZ,EAAD,CACEkB,IACEL,EAAW,yCAC2BA,GAClC,CAAEM,OAAAA,GAERC,IAAKN,KAEP,SAACb,EAAD,UAAYa,QAdPF,EADO,QAsBzB,C","sources":["api/apiService.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '07c817eca0f88df46ceed4174b3720d7';\n\nexport async function searchTrendingMovies() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMoviesDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    console.log();\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function searchMoviesCast(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMoviesReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-weight: 600;\n  font-size: 40px;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Ul = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: minmax(400px, auto);\n  grid-gap: 25px;\n  margin: 0 auto;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  overflow: hidden;\n  border-radius: 10px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 450px;\n`;\n\nexport const FilmTitle = styled.p`\n  font-size: 17px;\n  font-style: italic;\n  font-weight: 600;\n  color: #c13418;\n  margin: 0 auto;\n  display: table;\n`;\n","import { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { searchTrendingMovies } from '../../api/apiService';\nimport { FilmTitle, Img, Li, Title, Ul } from './Home.styled';\nimport poster from '../../img/no_poster.jpg';\n\nconst Home = () => {\n  const [trendingList, setTrendingList] = useState([]);\n  const location = useLocation();\n  const currentUrl = location.pathname === '/' ? 'movies/' : '';\n\n  useEffect(() => {\n    searchTrendingMovies().then(setTrendingList);\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n\n      <Ul>\n        {trendingList.map(({ id, poster_path, title }) => (\n          <Li key={id}>\n            <NavLink\n              id={id}\n              state={{ from: location }}\n              to={`${currentUrl}${id}`}\n            >\n              <Img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : { poster }\n                }\n                alt={title}\n              ></Img>\n              <FilmTitle>{title}</FilmTitle>\n            </NavLink>\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","KEY","searchTrendingMovies","response","data","results","console","log","searchMovies","query","searchMoviesDetails","movieId","searchMoviesCast","cast","searchMoviesReviews","Title","styled","Ul","Li","Img","FilmTitle","useState","trendingList","setTrendingList","location","useLocation","currentUrl","pathname","useEffect","then","map","id","poster_path","title","state","from","to","src","poster","alt"],"sourceRoot":""}