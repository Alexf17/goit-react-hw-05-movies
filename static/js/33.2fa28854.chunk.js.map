{"version":3,"file":"static/js/33.2fa28854.chunk.js","mappings":"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","sources":["api/apiService.jsx","const/Url.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '07c817eca0f88df46ceed4174b3720d7';\n\nexport async function searchTrendingMovies() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMoviesDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    console.log();\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function searchMoviesCast(movieId) {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function searchMoviesReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","export const URL = 'https://image.tmdb.org/t/p/w500';\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackButton = styled.button`\n  cursor: pointer;\n  background-color: #38539f;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 20px;\n  margin-bottom: 15px;\n  margin-left: 30px;\n\n  &:hover,\n  &:focus {\n    background-color: #a39cf4;\n  }\n`;\n\nexport const ImgBlock = styled.div`\n  width: 400px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 280px;\n  margin-left: 30px;\n  margin-right: 40px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const InfoBlock = styled.div`\n  max-width: 500px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-weight: 600;\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const OverviewTitle = styled.h3`\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\nexport const GenresTitle = styled.h4`\n  font-weight: 600;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;\nexport const Description = styled.p`\n  font-weight: 400;\n  margin-bottom: 10px;\n`;\n\nexport const InfoBlockTitle = styled.h3`\n  font-weight: 600;\n  font-size: 20px;\n  margin-bottom: 40px;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n`;\n\nexport const InfoItem = styled.li`\n  margin-right: 15px;\n`;\nexport const StyledNavLink = styled(NavLink)`\n  font-weight: 500;\n  font-size: 20px;\n  &:not(:last-child) {\n    margin-right: 50px;\n  }\n  &.active {\n    color: #a5b9ca;\n    font-weight: 600;\n    text-decoration: underline;\n  }\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #a5b9ca;\n    font-weight: 600;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { searchMoviesDetails } from '../../api/apiService';\n\nimport { URL } from '../../const/Url';\nimport poster from '../../img/no_poster.jpg';\nimport {\n  Description,\n  FilmTitle,\n  GenresTitle,\n  GoBackButton,\n  Img,\n  InfoBlock,\n  InfoBlockTitle,\n  InfoItem,\n  InfoList,\n  OverviewTitle,\n  StyledNavLink,\n  Wrapper,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    searchMoviesDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n  } = movie;\n\n  let date = new Date(release_date);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <GoBackButton>ðŸ‘ˆ Go back</GoBackButton>\n      </Link>\n\n      <Wrapper>\n        <div>\n          <Img\n            src={poster_path ? URL + poster_path : poster}\n            alt={title}\n            width=\"300\"\n          />\n        </div>\n        <InfoBlock>\n          <FilmTitle>\n            {original_title}({date.getFullYear()})\n          </FilmTitle>\n          <ul>\n            <li>\n              <Description>User Score:{vote_average.toFixed(1)}</Description>\n            </li>\n            <li>\n              <OverviewTitle>Overview</OverviewTitle>\n              <Description>{overview}</Description>\n            </li>\n            <li>\n              <GenresTitle>Genres</GenresTitle>\n              <Description>\n                {genres.map(genre => genre.name).join(' ')}\n              </Description>\n            </li>\n          </ul>\n          <InfoBlockTitle>Additional information</InfoBlockTitle>\n          <InfoList>\n            <InfoItem>\n              <StyledNavLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </StyledNavLink>\n            </InfoItem>\n            <InfoItem>\n              <StyledNavLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </StyledNavLink>\n            </InfoItem>\n          </InfoList>\n        </InfoBlock>\n      </Wrapper>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","searchTrendingMovies","response","data","results","console","log","searchMovies","query","searchMoviesDetails","movieId","searchMoviesCast","cast","searchMoviesReviews","URL","GoBackButton","styled","Img","Wrapper","InfoBlock","FilmTitle","OverviewTitle","GenresTitle","Description","InfoBlockTitle","InfoList","InfoItem","StyledNavLink","NavLink","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","then","poster_path","title","original_title","vote_average","release_date","overview","genres","date","Date","to","src","poster","alt","width","getFullYear","toFixed","map","genre","name","join","Suspense"],"sourceRoot":""}